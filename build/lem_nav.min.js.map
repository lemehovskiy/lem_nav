{"version":3,"sources":["lem_nav.es6"],"names":["factory","define","amd","exports","module","require","jQuery","$","LemNav","element","options","_classCallCheck","this","self","nav","dropdowns","navbar_open","$navbar","settings","extend","navbar_toggle","collapse_duration","trigger","trigger_linked","extra_trigger_button","navbar_collapse_duration","navbar_animation","submenu_animation","mobileBreakPoint","state","isSubmenuOpen","currentOpenSubmenu","$submenuBackBtn","init","_createClass","key","value","set_dropdowns_data","is_touch_device","addClass","initBackToParent","window","click","isDesktop","close_all","forEach","dropdown","on","event","stopPropagation","open","close","close_other_branches","branch_id","openSubmenu","switchFadeSubmenu","hover","extra_trigger","openSubMenu","initNavbarCollapse","width","find","prepend","currentMenuLv","menu_lv","currentMenuBranchID","submenu","console","log","nav_item","removeClass","get_submenu","nested_submenu","$nav_item","menu","menu_items","each","push","index","sub_menu","current_branch_id","navbar_trigger","closeNavbar","openNavbar","TweenLite","fromTo","autoAlpha","y","set","height","from","to","onComplete","$trigger","append","dropdown_shown","currentDropdown","tl","TimelineLite","scale","opacity","current_menu_height","outerHeight","dropdown_hidden","document","createEvent","e","fn","lemNav","$this","opt","arguments","args","Array","prototype","slice","call","length","i","ret","_typeof","lem_nav","apply"],"mappings":"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","file":"lem_nav.min.js","sourcesContent":[";(function (factory) {\n    'use strict';\n\n    if (typeof define === 'function' && define.amd) {\n        define(['jquery'], factory);\n    } else if (typeof exports !== 'undefined') {\n        module.exports = factory(require('jquery'));\n    } else {\n        factory(jQuery);\n    }\n})\n\n(function ($) {\n    'use strict';\n\n    class LemNav {\n\n        constructor(element, options) {\n\n            let self = this;\n\n            self.nav = {};\n\n            self.nav.dropdowns = [];\n\n            self.nav.navbar_open = false;\n\n            self.$navbar = $(element);\n\n            self.settings = $.extend({\n                navbar_toggle: '.lem-navbar-toggle',\n                collapse_duration: 0.2,\n                trigger: 'click',\n                trigger_linked: false,\n                extra_trigger_button: \"<button class='extra-trigger'><i class='icon icon-down-open-big'></i></button>\",\n                navbar_collapse_duration: 0.5,\n                navbar_animation: 'shift',\n                submenu_animation: 'fade',\n                mobileBreakPoint: 800\n\n            }, options);\n\n            self.state = {\n                isSubmenuOpen: false,\n                currentOpenSubmenu: null\n            }\n\n            self.$submenuBackBtn = null;\n\n            self.init();\n        }\n\n        init() {\n            let self = this;\n\n            this.set_dropdowns_data();\n\n            if (self.is_touch_device()) {\n                $('body').addClass('is-touch');\n            }\n\n            if (self.settings.submenu_animation == 'fade') {\n                self.initBackToParent();\n            }\n\n            if (self.settings.trigger == 'click') {\n                self.$navbar.addClass('trigger-click');\n\n                $(window).click(function () {\n                    if (self.isDesktop()) {\n                        self.close_all();\n                    }\n                });\n\n                self.nav.dropdowns.forEach(function (dropdown) {\n\n                    dropdown.trigger.on('click', function (event) {\n\n                        event.stopPropagation();\n\n                        if (self.isDesktop()) {\n                            if (dropdown.open) {\n                                self.close({\n                                    dropdown: dropdown\n                                })\n                            }\n                            else {\n                                self.close_other_branches(dropdown.branch_id);\n                                self.openSubmenu({\n                                    dropdown: dropdown\n                                })\n                            }\n                        }\n                        else {\n                            self.switchFadeSubmenu({\n                                dropdown: dropdown\n                            });\n                        }\n                    })\n                })\n            }\n\n            else if (self.settings.trigger == 'hover' && !(self.is_touch_device())) {\n                self.nav.dropdowns.forEach(function (dropdown) {\n                    dropdown.trigger.hover(\n                        function () {\n                            self.openSubmenu({\n                                dropdown: dropdown\n                            })\n                        },\n                        function () {\n                            self.openSubmenu({\n                                dropdown: dropdown\n                            })\n                        }\n                    )\n                })\n            }\n\n            if (self.settings.trigger_linked) {\n                self.nav.dropdowns.forEach(function (dropdown) {\n                    dropdown.extra_trigger.on('click', function (event) {\n\n                        event.stopPropagation();\n                        if (dropdown.openSubmenu) {\n\n                            self.close({\n                                dropdown: dropdown\n                            })\n                        }\n                        else {\n\n                            self.close_other_branches(dropdown.branch_id);\n                            self.openSubMenu({\n                                dropdown: dropdown\n                            })\n                        }\n                    })\n                })\n\n            }\n\n            self.initNavbarCollapse();\n        }\n\n        isDesktop() {\n            return $(window).width() > this.settings.mobileBreakPoint;\n        }\n\n        initBackToParent() {\n            let self = this;\n\n            self.$submenuBackBtn = $('<li class=\"sub-menu-back-btn\">Back</li>');\n            self.$navbar.find('.nav').prepend(self.$submenuBackBtn);\n\n            self.$submenuBackBtn.on('click', function () {\n\n                let currentMenuLv = self.state.currentOpenSubmenu.menu_lv;\n                let currentMenuBranchID = self.state.currentOpenSubmenu.branch_id;\n\n                // console.log(currentMenuLv);\n                // console.log(currentMenuBranchID);\n\n                if (currentMenuLv > 1) {\n                    // console.log(currentMenuLv);\n                    // console.log(currentMenuBranchID);\n\n                    self.nav.dropdowns.forEach(function (submenu) {\n                        if (submenu.branch_id == currentMenuBranchID && submenu.menu_lv == currentMenuLv - 1) {\n                            self.switchFadeSubmenu({\n                                dropdown: submenu\n                            })\n                        }\n                    })\n                }\n                else {\n                    console.log('close');\n                    self.nav.dropdowns.forEach(function (submenu) {\n                        if (submenu.open) {\n                            submenu.open = false;\n                            submenu.nav_item.removeClass('open');\n                        }\n                    })\n\n                    self.$navbar.removeClass('submenu-open');\n                }\n            })\n        }\n\n\n        set_dropdowns_data() {\n            let self = this;\n\n            self.$navbar.find('.nav >.menu-item-has-children').each(function (index) {\n\n                let sub_menu = get_submenu(\n                    {\n                        $nav_item: $(this),\n                        menu_lv: 1,\n                        branch_id: index\n                    }\n                );\n                self.nav.dropdowns.push(sub_menu);\n            });\n\n\n            function get_submenu(options) {\n                let nested_submenu = {\n                    nav_item: options.$nav_item,\n                    trigger: options.$nav_item,\n                    menu: options.$nav_item.find('>.sub-menu'),\n                    menu_items: options.$nav_item.find('>.sub-menu >li'),\n                    menu_lv: options.menu_lv,\n                    branch_id: options.branch_id,\n                    open: false\n                }\n\n\n                if (self.settings.trigger_linked) {\n                    nested_submenu.extra_trigger = self.extra_trigger(options.$nav_item)\n                }\n\n                options.$nav_item.find('>.sub-menu >.menu-item-has-children').each(function () {\n                    self.nav.dropdowns.push(get_submenu(\n                        {\n                            $nav_item: $(this),\n                            menu_lv: options.menu_lv + 1,\n                            branch_id: options.branch_id\n                        })\n                    )\n                });\n\n                return nested_submenu\n            }\n        }\n\n        close_other_branches(current_branch_id) {\n            let self = this;\n\n            self.nav.dropdowns.forEach(function (dropdown) {\n                if (dropdown.open && !dropdown.branch_id == current_branch_id) {\n                    self.close({\n                        dropdown: dropdown\n                    })\n                }\n            })\n        }\n\n        initNavbarCollapse() {\n            let self = this;\n\n            self.nav.navbar_trigger = $(self.settings.navbar_toggle);\n\n            self.nav.navbar_trigger.on('click', function () {\n                if (self.nav.navbar_open) {\n                    self.closeNavbar();\n                }\n\n                else {\n                    self.openNavbar();\n                }\n            })\n        }\n\n        openNavbar() {\n            let self = this;\n\n            switch (self.settings.navbar_animation) {\n                case 'shift':\n                    TweenLite.fromTo(self.$navbar, self.settings.navbar_collapse_duration,\n                        {autoAlpha: 0, y: 20},\n                        {autoAlpha: 1, y: 0}\n                    )\n                    break;\n\n                case 'collapse':\n                    TweenLite.set(self.$navbar, {height: \"auto\"})\n                    TweenLite.from(self.$navbar, self.settings.navbar_collapse_duration, {height: 0})\n                    break;\n            }\n\n\n            self.nav.navbar_open = true;\n            self.nav.navbar_trigger.addClass('open');\n        }\n\n        closeNavbar() {\n            let self = this;\n\n            switch (self.settings.navbar_animation) {\n                case 'shift':\n                    TweenLite.to(self.$navbar, self.settings.navbar_collapse_duration,\n                        {autoAlpha: 0, y: 20, onComplete: function(){\n                            self.$navbar.removeClass('submenu-open');\n                        }}\n                    )\n                    break;\n\n                case 'collapse':\n                    TweenLite.to(self.$navbar, self.settings.navbar_collapse_duration, {height: 0})\n                    break;\n            }\n\n            self.nav.navbar_open = false;\n            self.nav.navbar_trigger.removeClass('open');\n        }\n\n        extra_trigger($nav_item) {\n            let self = this;\n\n\n            let $trigger = $(self.settings.extra_trigger_button);\n\n            $nav_item.append($trigger);\n\n            return $trigger;\n        }\n\n        switchFadeSubmenu(options) {\n            let self = this;\n            let currentDropdown = options.dropdown;\n\n            if (!self.state.isSubmenuOpen) {\n                self.state.isSubmenuOpen = true;\n                self.$navbar.addClass('submenu-open');\n            }\n\n            // if (currentDropdown.menu_lv > 1) {\n            self.nav.dropdowns.forEach(function (dropdown) {\n                if (currentDropdown.branch_id == dropdown.branch_id && dropdown.menu_lv < currentDropdown.menu_lv) {\n                    dropdown.nav_item.addClass('nested-menu-open');\n                }\n                else {\n                    dropdown.nav_item.removeClass('nested-menu-open');\n                }\n            })\n            // }\n\n            let tl = new TimelineLite();\n            tl.to(self.$navbar, 0.2, {\n                scale: 1.01, opacity: 0, onComplete: function () {\n                    self.$navbar.addClass('submenu-open');\n\n                    self.nav.dropdowns.forEach(function (submenu) {\n                        submenu.nav_item.removeClass('open');\n                        submenu.open = true;\n                    })\n\n                    dropdown_shown();\n                }\n            });\n            tl.to(self.$navbar, 0.2, {\n                scale: 1, opacity: 1\n            });\n\n\n            function dropdown_shown() {\n                currentDropdown.menu.trigger('shown.lnav')\n                currentDropdown.menu.trigger('show.lnav');\n\n                currentDropdown.open = true;\n                currentDropdown.nav_item.addClass('open');\n\n                self.state.currentOpenSubmenu = currentDropdown;\n            }\n        }\n\n        openSubmenu(options) {\n            let self = this;\n            let dropdown = options.dropdown;\n            let current_menu_height = dropdown.menu.outerHeight();\n\n\n            TweenLite.set(dropdown.menu, {height: \"auto\"})\n            TweenLite.from(dropdown.menu, self.settings.collapse_duration, {\n                height: current_menu_height,\n                onComplete: dropdown_shown\n            })\n\n            dropdown.menu.trigger('show.lnav');\n\n            dropdown.open = true;\n            dropdown.nav_item.addClass('open');\n\n            function dropdown_shown() {\n                dropdown.menu.trigger('shown.lnav')\n            }\n        }\n\n        close_all() {\n            let self = this;\n\n            self.nav.dropdowns.forEach(function (dropdown) {\n                if (dropdown.open) {\n                    self.close({\n                        dropdown: dropdown\n                    })\n                }\n            })\n        }\n\n        close(options) {\n            let self = this;\n            let dropdown = options.dropdown;\n\n            TweenLite.to(dropdown.menu, self.settings.collapse_duration, {\n                height: 0,\n                onComplete: dropdown_hidden\n            })\n\n            dropdown.menu.trigger('hide.lnav');\n\n            dropdown.open = false;\n            dropdown.nav_item.removeClass('open');\n\n            function dropdown_hidden() {\n                dropdown.menu.trigger('hidden.lnav');\n            }\n        }\n\n        is_touch_device() {\n            try {\n                document.createEvent(\"TouchEvent\");\n                return true;\n            } catch (e) {\n                return false;\n            }\n        };\n    }\n\n\n    $.fn.lemNav = function () {\n        let $this = this,\n            opt = arguments[0],\n            args = Array.prototype.slice.call(arguments, 1),\n            length = $this.length,\n            i,\n            ret;\n        for (i = 0; i < length; i++) {\n            if (typeof opt == 'object' || typeof opt == 'undefined')\n                $this[i].lem_nav = new LemNav($this[i], opt);\n            else\n                ret = $this[i].lem_nav[opt].apply($this[i].lem_nav, args);\n            if (typeof ret != 'undefined') return ret;\n        }\n        return $this;\n    };\n\n\n});"]}