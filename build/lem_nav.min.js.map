{"version":3,"sources":["lem_nav.es6"],"names":["factory","define","amd","exports","module","require","jQuery","$","LemNav","element","options","_classCallCheck","this","self","nav","dropdowns","navbar_open","$navbar","settings","extend","navbar_toggle","collapse_duration","trigger","trigger_linked","extra_trigger_button","navbar_collapse_duration","on_dropdown_shown","on_dropdown_hide","init","_createClass","key","value","find","each","$this","push","menu","menu_items","open","forEach","dropdown","menu_items_tl","TimelineMax","paused","extra_trigger","window","click","close_all","on","event","stopPropagation","close","hover","navbar_collapse","navbar_trigger","TweenLite","to","height","removeClass","set","from","addClass","$button","append","dropdown_shown","current_menu_height","outerHeight","onComplete","fn","lemNav","opt","arguments","args","Array","prototype","slice","call","length","i","ret","_typeof","lem_nav","apply"],"mappings":"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","file":"lem_nav.min.js","sourcesContent":[";(function (factory) {\n    'use strict';\n\n    if (typeof define === 'function' && define.amd) {\n        define(['jquery'], factory);\n    } else if (typeof exports !== 'undefined') {\n        module.exports = factory(require('jquery'));\n    } else {\n        factory(jQuery);\n    }\n})\n\n(function ($) {\n    'use strict';\n\n    class LemNav {\n\n        constructor(element, options) {\n\n            let self = this;\n\n            self.nav = {};\n\n            self.nav.dropdowns = [];\n\n            self.nav.navbar_open = false;\n\n            self.$navbar = $(element);\n\n            self.settings = $.extend({\n                navbar_toggle: '.lem-navbar-toggle',\n                collapse_duration: 0.2,\n                trigger: 'click',\n                trigger_linked: false,\n                extra_trigger_button: \"<button class='extra-trigger'>+</button>\",\n                navbar_collapse_duration: 0.5,\n                on_dropdown_shown: function () {\n                },\n                on_dropdown_hide: function () {\n                }\n\n            }, options);\n\n            self.init();\n        }\n\n        init() {\n            let self = this;\n\n            self.$navbar.find('.menu-item-has-children').each(function () {\n                let $this = $(this);\n\n                self.nav.dropdowns.push({\n                    trigger: $this,\n                    menu: $this.find('>.sub-menu'),\n                    menu_items: $this.find('>.sub-menu >li'),\n                    open: false\n                });\n            })\n\n\n            self.nav.dropdowns.forEach(function (dropdown) {\n\n                dropdown.menu_items_tl = new TimelineMax({\n                    paused: true\n                });\n\n            })\n\n\n            if (self.settings.trigger_linked) {\n                self.extra_trigger();\n            }\n\n            if (self.settings.trigger == 'click') {\n                $(window).click(function () {\n                    self.close_all();\n                });\n                self.nav.dropdowns.forEach(function (dropdown) {\n                    dropdown.trigger.on('click', function (event) {\n                        event.stopPropagation();\n                        if (dropdown.open) {\n                            self.close({\n                                dropdown: dropdown\n                            })\n                        }\n                        else {\n                            self.close_all();\n                            self.open({\n                                dropdown: dropdown\n                            })\n                        }\n                    })\n                })\n            }\n\n            else if (self.settings.trigger == 'hover') {\n                self.nav.dropdowns.forEach(function (dropdown) {\n                    dropdown.trigger.hover(\n                        function () {\n                            self.open({\n                                dropdown: dropdown\n                            })\n                        },\n                        function () {\n                            self.close({\n                                dropdown: dropdown\n                            })\n                        }\n                    )\n                })\n            }\n\n\n            self.navbar_collapse();\n        }\n\n        close_all() {\n\n            let self = this;\n\n            self.nav.dropdowns.forEach(function (dropdown) {\n                if (dropdown.open) {\n                    self.close({\n                        dropdown: dropdown\n                    })\n                }\n            })\n        }\n\n        navbar_collapse() {\n            let self = this;\n\n            self.nav.navbar_trigger = $(self.settings.navbar_toggle);\n\n\n            self.nav.navbar_trigger.on('click', function () {\n                if (self.nav.navbar_open) {\n                    TweenLite.to(self.$navbar, self.settings.navbar_collapse_duration, {height: 0})\n\n                    self.nav.navbar_open = false;\n                    self.nav.navbar_trigger.removeClass('open');\n                }\n\n                else {\n                    TweenLite.set(self.$navbar, {height: \"auto\"})\n                    TweenLite.from(self.$navbar, self.settings.navbar_collapse_duration, {height: 0})\n\n                    self.nav.navbar_open = true;\n                    self.nav.navbar_trigger.addClass('open');\n                }\n            })\n        }\n\n        extra_trigger() {\n            let self = this;\n\n            self.nav.dropdowns.forEach(function (dropdown) {\n\n                let $button = $(self.settings.extra_trigger_button);\n\n                dropdown.trigger.append($button);\n\n                $button.on('click', function () {\n                    if (dropdown.open) {\n                        self.close({\n                            dropdown: dropdown\n                        })\n                    }\n                    else {\n                        self.open({\n                            dropdown: dropdown\n                        })\n                    }\n                })\n            })\n        }\n\n        open(options) {\n            let self = this;\n            let dropdown = options.dropdown;\n            let current_menu_height = dropdown.menu.outerHeight();\n\n            TweenLite.set(dropdown.menu, {height: \"auto\"})\n            TweenLite.from(dropdown.menu, self.settings.collapse_duration, {\n                height: current_menu_height,\n                onComplete: dropdown_shown\n            })\n\n            dropdown.open = true;\n            dropdown.trigger.addClass('open');\n\n            function dropdown_shown() {\n                self.settings.on_dropdown_shown()\n            }\n        }\n\n        close(options) {\n            let self = this;\n            let dropdown = options.dropdown;\n\n            self.settings.on_dropdown_hide()\n\n            TweenLite.to(dropdown.menu, self.settings.collapse_duration, {height: 0})\n\n            dropdown.open = false;\n            dropdown.trigger.removeClass('open');\n        }\n    }\n\n\n    $.fn.lemNav = function() {\n        let $this = this,\n            opt = arguments[0],\n            args = Array.prototype.slice.call(arguments, 1),\n            length = $this.length,\n            i,\n            ret;\n        for (i = 0; i < length; i++) {\n            if (typeof opt == 'object' || typeof opt == 'undefined')\n                $this[i].lem_nav = new LemNav($this[i], opt);\n            else\n                ret = $this[i].lem_nav[opt].apply($this[i].lem_nav, args);\n            if (typeof ret != 'undefined') return ret;\n        }\n        return $this;\n    };\n\n\n});"]}